name: Fetch and Update Gold Data


on:
  # schedule:
  #   - cron: "35 14 * * *"   # ✅ Runs every day at 19:05 IST after data_fetcher
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:  # allows manual trigger from GitHub UI

permissions:
  contents: write

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'   # 3.13 is too new; use 3.10 or 3.11 for stability

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4️⃣ Set environment variables (MySQL credentials)
      - name: Set environment variables
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          echo "✅ Environment variables loaded"

          
      - name: Test database connection
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
        run: |
          python - <<'EOF'
          import os, mysql.connector
          try:
              conn = mysql.connector.connect(
                  host=os.getenv("DB_HOST"),
                  user=os.getenv("DB_USER"),
                  password=os.getenv("DB_PASS")
              )
              print("✅ Connection successful")
          except Exception as e:
              print("❌ Connection failed:", e)
          EOF
          
      # 5️⃣ Run data update script
      - name: Run data fetch & update
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          python src/data_preprocess.py